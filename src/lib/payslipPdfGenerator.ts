import jsPDF from 'jspdf';

interface PayslipData {
  employee: {
    employee_no: string;
    full_name: string;
    ic_no: string | null;
    epf_no: string | null;
    socso_no: string | null;
    income_tax_no: string | null;
    department: string;
    position: string;
  };
  period: {
    month: string;
    year: number;
  };
  totalOTAmount: number;
}

export function generatePayslipPDF(data: PayslipData): void {
  const doc = new jsPDF({
    orientation: 'portrait',
    unit: 'mm',
    format: 'a4'
  });

  const primaryColor: [number, number, number] = [0, 163, 200]; // #00A3C8
  const accentColor: [number, number, number] = [0, 118, 163]; // #0076A3
  const textColor: [number, number, number] = [31, 41, 55]; // #1F2937
  const grayColor: [number, number, number] = [156, 163, 175]; // #9CA3AF

  let yPos = 20;
  const leftMargin = 20;
  const pageWidth = 210;

  // Company Header
  doc.setFontSize(14);
  doc.setFont('helvetica', 'bold');
  doc.setTextColor(...accentColor);
  doc.text('TIDAL TECHNICAL SUPPLY & SERVICES SDN. BHD.', leftMargin, yPos);
  
  yPos += 6;
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  doc.setTextColor(...textColor);
  doc.text('(202301035098 (1529021-A))', leftMargin, yPos);
  
  yPos += 5;
  doc.setFontSize(9);
  doc.text('LEVEL 2, MENARA TSR, NO 12 JALAN PJU 7/3, MUTIARA DAMANSARA', leftMargin, yPos);
  
  yPos += 5;
  doc.text('Telephone No. 03-7733 5253', leftMargin, yPos);

  // Period & Generated Date (Right aligned)
  doc.setFont('helvetica', 'bold');
  const periodText = `Period: ${data.period.month} ${data.period.year}`;
  const generatedText = `Generated on: ${new Date().toLocaleDateString('en-GB')}`;
  doc.text(periodText, pageWidth - 20, 20, { align: 'right' });
  doc.setFont('helvetica', 'normal');
  doc.text(generatedText, pageWidth - 20, 26, { align: 'right' });

  // Horizontal line
  yPos += 8;
  doc.setDrawColor(229, 231, 235);
  doc.line(leftMargin, yPos, pageWidth - leftMargin, yPos);

  // Employee Info
  yPos += 10;
  doc.setFontSize(12);
  doc.setFont('helvetica', 'bold');
  doc.setTextColor(...textColor);
  const employeeTitle = `${data.employee.full_name} (Employee No: ${data.employee.employee_no})`;
  doc.text(employeeTitle, leftMargin, yPos);

  yPos += 7;
  doc.setFontSize(10);
  doc.setFont('helvetica', 'normal');
  doc.text(`Position: ${data.employee.position}`, leftMargin, yPos);

  yPos += 5;
  doc.text(`Dept: ${data.employee.department}`, leftMargin, yPos);

  yPos += 5;
  const icNo = data.employee.ic_no || 'Not Provided';
  doc.text(`IC/Passport: ${icNo}`, leftMargin, yPos);

  // NET PAY Box (Right side)
  const boxX = pageWidth - 70;
  const boxY = yPos - 15;
  const boxWidth = 50;
  const boxHeight = 25;

  // Draw box
  doc.setFillColor(230, 247, 250); // #E6F7FA
  doc.setDrawColor(...primaryColor);
  doc.rect(boxX, boxY, boxWidth, boxHeight, 'FD');

  // NET PAY label
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(10);
  doc.setTextColor(...accentColor);
  doc.text('NET PAY', boxX + boxWidth / 2, boxY + 8, { align: 'center' });

  // Amount
  doc.setFontSize(14);
  doc.setTextColor(...textColor);
  const amountText = `RM ${data.totalOTAmount.toFixed(2)}`;
  doc.text(amountText, boxX + boxWidth / 2, boxY + 15, { align: 'center' });

  // Period in box
  doc.setFontSize(8);
  doc.text(periodText, boxX + boxWidth / 2, boxY + 21, { align: 'center' });

  // Employee Identifiers
  yPos += 10;
  doc.setFontSize(9);
  doc.setTextColor(...textColor);
  const epfNo = data.employee.epf_no || 'Not Provided';
  const socsoNo = data.employee.socso_no || 'Not Provided';
  const taxNo = data.employee.income_tax_no || 'Not Provided';

  doc.text(`EPF No: ${epfNo}`, leftMargin, yPos);
  doc.text(`SOCSO No: ${socsoNo}`, leftMargin + 60, yPos);

  yPos += 5;
  doc.text(`Income Tax No: ${taxNo}`, leftMargin, yPos);

  // Section Header
  yPos += 12;
  doc.setFontSize(12);
  doc.setFont('helvetica', 'bold');
  doc.setTextColor(...primaryColor);
  doc.text('Employee Earnings/Reimbursements', leftMargin, yPos);

  yPos += 2;
  doc.setDrawColor(229, 231, 235);
  doc.line(leftMargin, yPos, pageWidth - leftMargin, yPos);

  // Table Header
  yPos += 8;
  doc.setFontSize(10);
  doc.setTextColor(...textColor);
  doc.text('Earnings Type', leftMargin, yPos);
  doc.text('Current', pageWidth - 40, yPos, { align: 'right' });

  // Table Row
  yPos += 7;
  doc.setFont('helvetica', 'normal');
  doc.text('Overtime Pay', leftMargin, yPos);
  doc.text(`RM ${data.totalOTAmount.toFixed(2)}`, pageWidth - 40, yPos, { align: 'right' });

  // Footer
  const footerY = 280;
  doc.setFontSize(8);
  doc.setTextColor(...grayColor);
  const footerText = 'This report is auto-generated by the OT Management System. For HR and BOD internal use only.';
  doc.text(footerText, pageWidth / 2, footerY, { align: 'center', maxWidth: 170 });

  // Add note if data incomplete
  if (!data.employee.epf_no || !data.employee.socso_no || !data.employee.income_tax_no) {
    doc.setTextColor(204, 102, 0); // Orange
    const noteText = 'Note: Some employee information is incomplete. Please update profile.';
    doc.text(noteText, pageWidth / 2, footerY - 5, { align: 'center', maxWidth: 170 });
  }

  // Save PDF
  const fileName = `OT_Payslip_${data.employee.employee_no}_${data.period.month}_${data.period.year}.pdf`;
  doc.save(fileName);
}
